---
AWSTemplateFormatVersion: "2010-09-09"
Description: Root stack for DataCollectionBus

Parameters:
  AWSOrganizationID:
    Type: String
    Description: The AWS Organizations ID for the organization that should be allowed to put events on the event bus. 'Comma Delimited list of AWS Organization IDs for all Payer Account'
  DataCollectionBucket:
    Type: String
    Description: Name of the S3 Bucket to be created to hold data information. 
  DataCollectionBucketKmsArn:
    Type: String
    Default: "na"
    Description: Enter KMS Arn if supplied Destination bucket is encrypted with KMS(Type N for SSE encryption)
  AthenaResultBucket:
    Type: String
    Default: "aws-athena-query-results-*"
    Description: S3 Bucket where Amazon Athena stores results
  AthenaBucketKmsArn:
    Type: String
    Default: "na"
    Description: Enter KMS Arn if Athena Results bucket is encrypted with KMS(Type N for SSE encryption)
  QuicksightServiceRole:
    Type: String
    Default: aws-quicksight-service-role-v0
    Description: The Quicksight Service role attached to QS, Default is aws-quicksight-service-role-v0
  QuickSightAnalysisAuthor:
      Type: String
      Description: The QuickSight analysis author Arn that is allowed configure and manage the QS Analyses and dashboards. e.g. arn:aws:quicksight:<Region>:<AccountID>:user/default/<username>
  MultiAccountRoleName:
    Type: String
    Description: Name of the IAM role deployed in all Link accounts where needed to retrieve AWS Data. Prefix will be added based on module
    Default: "MultiAccountRole"  
  ResourcePrefix:
    Type: String
    Description: This prefix will be placed in front of resources created where required. Note you may wish to add a dash at the end to make more readable
    Default: "Heidi-"
  EnableHealthModule:
    Type: String
    Description: Collects AWS Health data from different accounts and create quicksight analysis
    Default: "yes"
    AllowedValues:
      - "yes"
      - "no"
  EnableCaseModule:
    Type: String
    Description: Collects AWS Cases data from different accounts
    Default: "yes"
    AllowedValues:
      - "yes"
      - "no"
  EnableTAModule:
    Type: String
    Description: Collects AWS Cases data from different accounts
    Default: "yes"
    AllowedValues:
      - "yes"
      - "no"
  EnableHealthEventUrl:
    Type: String
    Description: "Optional: Event URL are for easy read. Enabling this would create DynamoDB, APIGW and Lambda"
    Default: "no"
    AllowedValues:
      - "yes"
      - "no"
  EnableNotificationModule:
    Type: String
    Description: "Optional: Event URL are for easy read. Enabling this would create DynamoDB, APIGW and Lambda"
    Default: "no"
    AllowedValues:
      - "yes"
      - "no"
  SlackChannelId:
    Type: String
    Default: "na"
    Description: If EnableNotificationModule, ensure that the SlackChannelId is provided when the channel is Slack.
  SlackWorkspaceId:
    Type: String
    Default: "na"
    Description: If EnableNotificationModule, ensure that the SlackWorkspaceId is provided when the channel is Slack.
  TeamId:
    Type: String
    Description: If EnableNotificationModule, ensure that the TeamId is provided when the channel is Slack.
    Default: "na"
  TeamsTenantId:
    Type: String
    Description: If EnableNotificationModule, ensure that the TeamsTenantId is provided when the channel is Slack.
    Default: "na"
  TeamsChannelId:
    Type: String
    Description: If EnableNotificationModule, ensure that the TeamsChannelId is provided when the channel is Slack.
    Default: "na"

Conditions:
  EnableHealthModule: !Equals [ !Ref EnableHealthModule, "yes"]
  EnableHealthEventUrl: !Equals [ !Ref EnableHealthEventUrl, "yes"]
  EnableCaseModule: !Equals [ !Ref EnableCaseModule, "yes"]
  EnableTAModule: !Equals [ !Ref EnableTAModule, "yes"]
  EnableNotificationModule: !Equals [ !Ref EnableNotificationModule, "yes"]
  DeployHealthEventUrl: !And 
    - !Condition EnableHealthModule
    - !Condition EnableHealthEventUrl

Resources:
  DataCollectionModule:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/DataCollectionModule/DataCollectionModule.yaml
      Parameters:
        AWSOrganizationID: !Ref AWSOrganizationID
        DataCollectionBucket: !Ref DataCollectionBucket
        DataCollectionBucketKmsArn: !Ref DataCollectionBucketKmsArn
        AthenaResultBucket: !Ref AthenaResultBucket
        AthenaBucketKmsArn: !Ref AthenaBucketKmsArn
        QuicksightServiceRole: !Ref QuicksightServiceRole
        ResourcePrefix: !Ref ResourcePrefix
        EnableHealthModule: !Ref EnableHealthModule
        EnableCaseModule: !Ref EnableCaseModule

####Notification Module Stack Start########
  NotificationModuleSetup:
    Type: AWS::CloudFormation::Stack
    DependsOn: DataCollectionModule
    Condition: EnableNotificationModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/NotificationModule/NotificationModule.yaml
      Parameters:
        DataCollectionAccountID: !Sub ${AWS::AccountId}
        ResourcePrefix: !Ref ResourcePrefix
        SlackChannelId: !Ref SlackChannelId
        SlackWorkspaceId: !Ref SlackWorkspaceId
        TeamId: !Ref TeamId
        TeamsTenantId: !Ref TeamsTenantId
        TeamsChannelId: !Ref TeamsChannelId

####Health Module Stack Start#####
  HealthModuleCollectionSetup:
    Type: AWS::CloudFormation::Stack
    DependsOn: DataCollectionModule
    Condition: EnableHealthModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/HealthModule/HealthModuleCollectionSetup.yaml
      Parameters:
        DataCollectionAccountID: !Sub ${AWS::AccountId}
        DataCollectionRegion: !Sub ${AWS::Region}
        ResourcePrefix: !Ref ResourcePrefix

  HealthModuleDataSetSetup:
    Type: AWS::CloudFormation::Stack
    DependsOn: HealthModuleCollectionSetup
    Condition: EnableHealthModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/HealthModule/HealthModuleDataSetSetup.yaml
      Parameters:
        DataCollectionBucket: !Ref DataCollectionBucket
        QuickSightAnalysisAuthor: !Ref QuickSightAnalysisAuthor
        HeidiDataCollectionDB: !GetAtt DataCollectionModule.Outputs.HeidiDataCollectionDB
        HeidiQSDataSourceArn: !GetAtt DataCollectionModule.Outputs.HeidiQSDataSourceArn

  HealthModuleEventUrlSetup:
    Type: AWS::CloudFormation::Stack
    Condition: DeployHealthEventUrl
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/HealthModule/HealthModuleEventUrlSetup.yaml
      Parameters:
        DataCollectionAccountID: !Sub ${AWS::AccountId}
        DataCollectionRegion: !Sub ${AWS::Region}
        ResourcePrefix: !Ref ResourcePrefix

  HealthModuleQSAnalysis:
    Type: AWS::CloudFormation::Stack
    DependsOn: HealthModuleCollectionSetup
    Condition: EnableHealthModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/HealthModule/HealthModuleQSAnalysis.yaml
      Parameters:
        QuickSightAnalysisAuthor: !Ref QuickSightAnalysisAuthor
        QSDataSetHealthEvent: !GetAtt HealthModuleDataSetSetup.Outputs.QSDataSetHealthEvent
        EventDetailUrl: !If [ EnableHealthEventUrl, !GetAtt HealthModuleEventUrlSetup.Outputs.EventDetailApiEndpoint, "https://example.com" ]

####Case Module Stack Start#####
  SupportCaseModuleCollectionSetup:
    Type: AWS::CloudFormation::Stack
    DependsOn: DataCollectionModule
    Condition: EnableCaseModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/SupportCaseModule/SupportCaseModuleCollectionSetup.yaml
      Parameters:
        DataCollectionAccountID: !Sub ${AWS::AccountId}
        DataCollectionRegion: !Sub ${AWS::Region}
        ResourcePrefix: !Ref ResourcePrefix
        MultiAccountRoleName: !Ref MultiAccountRoleName
        IsDataCollectionSetup: "yes"

  SupportCaseModuleDataSetSetup:
    Type: AWS::CloudFormation::Stack
    DependsOn: SupportCaseModuleCollectionSetup
    Condition: EnableCaseModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/SupportCaseModule/SupportCaseModuleDataSetSetup.yaml
      Parameters:
        DataCollectionBucket: !Ref DataCollectionBucket
        QuickSightAnalysisAuthor: !Ref QuickSightAnalysisAuthor
        HeidiDataCollectionDB: !GetAtt DataCollectionModule.Outputs.HeidiDataCollectionDB
        HeidiQSDataSourceArn: !GetAtt DataCollectionModule.Outputs.HeidiQSDataSourceArn

  SupportCaseModuleQSAnalysis:
    Type: AWS::CloudFormation::Stack
    DependsOn: SupportCaseModuleCollectionSetup
    Condition: EnableCaseModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/SupportCaseModule/SupportCaseModuleQSAnalysis.yaml
      Parameters:
        QuickSightAnalysisAuthor: !Ref QuickSightAnalysisAuthor
        QSDataSetCasesEvent: !GetAtt SupportCaseModuleDataSetSetup.Outputs.QSDataSetCasesEvent

####Trusted Advisor Checks######
  TAModuleCollectionSetup:
    Type: AWS::CloudFormation::Stack
    DependsOn: DataCollectionModule
    Condition: EnableTAModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/TrustedAdvisorModule/TAModuleCollectionSetup.yaml
      Parameters:
        DataCollectionAccountID: !Sub ${AWS::AccountId}
        DataCollectionRegion: !Sub ${AWS::Region}
        ResourcePrefix: !Ref ResourcePrefix

  TAModuleDataSetSetup:
    Type: AWS::CloudFormation::Stack
    DependsOn: TAModuleCollectionSetup
    Condition: EnableTAModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/TrustedAdvisorModule/TAModuleDataSetSetup.yaml
      Parameters:
        DataCollectionBucket: !Ref DataCollectionBucket
        QuickSightAnalysisAuthor: !Ref QuickSightAnalysisAuthor
        HeidiDataCollectionDB: !GetAtt DataCollectionModule.Outputs.HeidiDataCollectionDB
        HeidiQSDataSourceArn: !GetAtt DataCollectionModule.Outputs.HeidiQSDataSourceArn

  TAModuleQSAnalysis:
    Type: AWS::CloudFormation::Stack
    DependsOn: TAModuleCollectionSetup
    Condition: EnableTAModule
    Properties:
      TemplateURL: !Sub https://${DataCollectionBucket}.s3.amazonaws.com/DataCollection-metadata/TrustedAdvisorModule/TAModuleQSAnalysis.yaml
      Parameters:
        QuickSightAnalysisAuthor: !Ref QuickSightAnalysisAuthor
        QSDataSetTACheckEvents: !GetAtt TAModuleDataSetSetup.Outputs.QSDataSetTACheckEvents